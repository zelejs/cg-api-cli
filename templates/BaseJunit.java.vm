package com.jfeat.base;

import com.jfeat.AmApplication;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.context.WebApplicationContext;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.put;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;


/**
 * 基础测试类
 *
 * @author Admin
 * @Date 2017/5/21 16:10
 */
@ActiveProfiles(profiles = "test")
@RunWith(SpringRunner.class)
@SpringBootTest(classes = AmApplication.class)
@WebAppConfiguration
@Transactional
public class BaseJunit {
    protected static final Logger logger = LoggerFactory.getLogger(BaseJunit.class);

    @Autowired
    WebApplicationContext webApplicationContext;

    protected MockMvc mockMvc;

    @Before
    public void setupMockMvc(){
        mockMvc = MockMvcBuilders.webAppContextSetup(webApplicationContext).build();
    }

    @Test
    public void testGet() throws Exception {
        //RequestBuilder request = get("/api/items");
        //MvcResult result = mockMvc.perform(request).andExpect(status().isOk()).andReturn();

        //logger.debug(result.getResponse().getContentAsString());
    }

    //@TestTry
    //public void testPost()  throws Exception {
    //    String json = "";
    //    RequestBuilder request = post("/api/items").content(json);
    //    MvcResult result = mockMvc.perform(request).andExpect(status().isOk()).andReturn();
    //
    //    logger.debug(result.getResponse().getContentAsString());
    //}
}
