package ${cfg.am}.${cfg.en}.services.domain.service.impl;

##import com.baomidou.mybatisplus.plugins.Page;
##import com.jfeat.am.${cfg.am}.${cfg.en}.services.domain.dao.Query${entity}Dao;
##import com.jfeat.am.${cfg.am}.${cfg.en}.services.domain.service.Query${entity}Service;
##import com.jfeat.am.${cfg.am}.${cfg.en}.services.gen.persistence.model.{entity};
##import org.springframework.stereotype.Service;
#if($tablename.equalsIgnoreCase(${cfg.groupBy}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}GroupByService;
#elseif($tablename.equalsIgnoreCase(${cfg.group}))
#if($tablename.endsWith("_category"))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#else
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}GroupService;
#end
#elseif($tablename.equalsIgnoreCase(${cfg.master}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}OverModelService;
#elseif($tablename.equalsIgnoreCase(${cfg.slave1}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#elseif($tablename.equalsIgnoreCase(${cfg.slave2}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#elseif($tablename.equalsIgnoreCase(${cfg.slave3}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#elseif($tablename.equalsIgnoreCase(${cfg.slave4}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#elseif($tablename.equalsIgnoreCase(${cfg.slave5}))
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#else
import ${cfg.am}.${cfg.en}.services.domain.service.${entity}Service;
#end
##import javax.annotation.Resource;
##import java.util.List;
#if($tablename.equalsIgnoreCase(${cfg.groupBy}))
import ${cfg.am}.${cfg.en}.services.gen.crud.service.impl.CRUD${entity}GroupByServiceImpl;
#elseif($tablename.equalsIgnoreCase(${cfg.group}))
#if($tablename.endsWith("_category"))
import ${cfg.am}.${cfg.en}.services.gen.crud.service.impl.CRUD${entity}ServiceImpl;
#else
import ${cfg.am}.${cfg.en}.services.gen.crud.service.impl.CRUD${entity}GroupServiceImpl;
#end
#elseif($tablename.equalsIgnoreCase(${cfg.master}))
import ${cfg.am}.${cfg.en}.services.gen.crud.service.impl.CRUD${entity}OverModelServiceImpl;
#else
import ${cfg.am}.${cfg.en}.services.gen.crud.service.impl.CRUD${entity}ServiceImpl;
#end
import org.springframework.stereotype.Service;

/**
 * <p>
 *  服务实现类
 * </p>
 *
 * @author admin
 * @since 2017-10-16
 */
#set($qulitName=$entity.substring(0,1).toLowerCase()+$entity.substring(1)+"Service")
@Service("${qulitName}")
#if($tablename.equalsIgnoreCase(${cfg.groupBy}))
public class ${entity}GroupByServiceImpl extends CRUD${entity}GroupByServiceImpl implements ${entity}GroupByService {
#elseif($tablename.equalsIgnoreCase(${cfg.group}))
#if($tablename.endsWith("_category"))
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#else
public class ${entity}GroupServiceImpl extends CRUD${entity}GroupServiceImpl implements ${entity}GroupService {
#end
#elseif($tablename.equalsIgnoreCase(${cfg.master}))
public class ${entity}OverModelServiceImpl extends CRUD${entity}OverModelServiceImpl implements ${entity}OverModelService {
#elseif($tablename.equalsIgnoreCase(${cfg.slave1}))
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#elseif($tablename.equalsIgnoreCase(${cfg.slave2}))
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#elseif($tablename.equalsIgnoreCase(${cfg.slave3}))
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#elseif($tablename.equalsIgnoreCase(${cfg.slave4}))
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#elseif($tablename.equalsIgnoreCase(${cfg.slave5}))
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#else
public class ${entity}ServiceImpl extends CRUD${entity}ServiceImpl implements ${entity}Service {
#end
    ##@Resource
    ##Query${entity}Dao query${entity}Dao;
    ##
    ##@Override
    ##public List<${entity}> find${entity}Page(Page<${entity}> page, ${entity} ${entity.toLowerCase()}, String search, String orderBy) {
    ##    return query${entity}Dao.find${entity}Page(page, ${entity.toLowerCase()}, search, orderBy);
    ##}
}
